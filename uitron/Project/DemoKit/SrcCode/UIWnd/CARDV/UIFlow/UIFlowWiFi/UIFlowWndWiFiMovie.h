//This source code is generated by UI Designer Studio.

#ifndef UIFLOWWNDWIFIMOVIE_H
#define UIFLOWWNDWIFIMOVIE_H

#include "UIFramework.h"

extern VControl UIFlowWndWiFiMovieCtrl;//Panel type

//---------------------UIFlowWndWiFiMovieCtrl User Export---------------------------

typedef enum
{
    WIFI_MOV_ST_IDLE = 0,
    WIFI_MOV_ST_LVIEW,
    WIFI_MOV_ST_RECORD,
    WIFI_MOV_ST_MAX
}WIFI_MOV_ST_SETTING;

extern INT32 UIFlowWndWiFiMovie_GetStatus(void);
extern UINT32  UIFlowWiFiMovie_GetMaxRecTime(void);

extern INT32 UIFlowWndWiFiMovie_OnExeMovieRec(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieRecSize(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetCyclicRec(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetHDR(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieEV(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
//#NT#2016/06/03#Charlie Chang -begin
//#NT#add contrast, audioIn, flip_mirror , quality set
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieContrast(VControl *pCtrl,UINT32 paramNum,UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieAudioIn(VControl *pCtrl,UINT32 paramNum,UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieAudioInSR(VControl *pCtrl,UINT32 paramNum,UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieFlipMirror(VControl *pCtrl,UINT32 paramNum,UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieQualitySet(VControl *pCtrl,UINT32 paramNum,UINT32 *paramArray);
//#NT#2016/06/03#Charlie Chang -end
extern INT32 UIFlowWndWiFiMovie_OnExeSetMotionDet(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieAudio(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieDateImprint(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieLiveviewSize(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieGSesnorSensitivity(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetAutoRecording(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieRecBitRate(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeSetMovieLiveviewBitRate(VControl *, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeMovieLiveviewStart(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnExeMovieTriggerRawEnc(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
//#NT#2017/01/03#Isiah Chang -begin
//#NT#Add WiFiCmd Bitrate control.
extern INT32 UIFlowWndWiFiMovie_OnExeMovieBRCAdjust(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
extern BOOL UIFlowWndMovie_BRC_AutoRunStateGet(void);
//#NT#2017/01/03#Isiah Chang -end
//#NT#2017/04/18#Isiah Chang -begin
//#NT#Add WiFiCmd RTSP Audio control.
extern INT32 UIFlowWndWiFiMovie_OnExeMovieRTSPAudCtrl(VControl *pCtrl, UINT32 paramNum, UINT32 *paramArray);
//#NT#2017/04/18#Isiah Chang -end
extern INT32 UIFlowWndWiFiMovie_OnMovieFull(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnMovieWrError(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnStorageSlow(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnMovieOneSec(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnMovieRawEncJpgOKCB(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnMovieRawEncErr(VControl *pCtrl, UINT32, UINT32 *);
extern INT32 UIFlowWndWiFiMovie_OnTimer(VControl *pCtrl, UINT32, UINT32 *);

#endif
